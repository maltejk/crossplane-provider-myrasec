// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Domain) DeepCopyInto(out *Domain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Domain.
func (in *Domain) DeepCopy() *Domain {
	if in == nil {
		return nil
	}
	out := new(Domain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Domain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainList) DeepCopyInto(out *DomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Domain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainList.
func (in *DomainList) DeepCopy() *DomainList {
	if in == nil {
		return nil
	}
	out := new(DomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainObservation) DeepCopyInto(out *DomainObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(int64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Modified != nil {
		in, out := &in.Modified, &out.Modified
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainObservation.
func (in *DomainObservation) DeepCopy() *DomainObservation {
	if in == nil {
		return nil
	}
	out := new(DomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainParameters) DeepCopyInto(out *DomainParameters) {
	*out = *in
	if in.AutoUpdate != nil {
		in, out := &in.AutoUpdate, &out.AutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PausedUntil != nil {
		in, out := &in.PausedUntil, &out.PausedUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainParameters.
func (in *DomainParameters) DeepCopy() *DomainParameters {
	if in == nil {
		return nil
	}
	out := new(DomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSpec) DeepCopyInto(out *DomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSpec.
func (in *DomainSpec) DeepCopy() *DomainSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainStatus) DeepCopyInto(out *DomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainStatus.
func (in *DomainStatus) DeepCopy() *DomainStatus {
	if in == nil {
		return nil
	}
	out := new(DomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ratelimit) DeepCopyInto(out *Ratelimit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ratelimit.
func (in *Ratelimit) DeepCopy() *Ratelimit {
	if in == nil {
		return nil
	}
	out := new(Ratelimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ratelimit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatelimitList) DeepCopyInto(out *RatelimitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ratelimit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatelimitList.
func (in *RatelimitList) DeepCopy() *RatelimitList {
	if in == nil {
		return nil
	}
	out := new(RatelimitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RatelimitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatelimitObservation) DeepCopyInto(out *RatelimitObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Modified != nil {
		in, out := &in.Modified, &out.Modified
		*out = new(string)
		**out = **in
	}
	if in.RatelimitID != nil {
		in, out := &in.RatelimitID, &out.RatelimitID
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatelimitObservation.
func (in *RatelimitObservation) DeepCopy() *RatelimitObservation {
	if in == nil {
		return nil
	}
	out := new(RatelimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatelimitParameters) DeepCopyInto(out *RatelimitParameters) {
	*out = *in
	if in.Burst != nil {
		in, out := &in.Burst, &out.Burst
		*out = new(int64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.SubdomainName != nil {
		in, out := &in.SubdomainName, &out.SubdomainName
		*out = new(string)
		**out = **in
	}
	if in.Timeframe != nil {
		in, out := &in.Timeframe, &out.Timeframe
		*out = new(int64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatelimitParameters.
func (in *RatelimitParameters) DeepCopy() *RatelimitParameters {
	if in == nil {
		return nil
	}
	out := new(RatelimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatelimitSpec) DeepCopyInto(out *RatelimitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatelimitSpec.
func (in *RatelimitSpec) DeepCopy() *RatelimitSpec {
	if in == nil {
		return nil
	}
	out := new(RatelimitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatelimitStatus) DeepCopyInto(out *RatelimitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatelimitStatus.
func (in *RatelimitStatus) DeepCopy() *RatelimitStatus {
	if in == nil {
		return nil
	}
	out := new(RatelimitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redirect) DeepCopyInto(out *Redirect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redirect.
func (in *Redirect) DeepCopy() *Redirect {
	if in == nil {
		return nil
	}
	out := new(Redirect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Redirect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectList) DeepCopyInto(out *RedirectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Redirect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectList.
func (in *RedirectList) DeepCopy() *RedirectList {
	if in == nil {
		return nil
	}
	out := new(RedirectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedirectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectObservation) DeepCopyInto(out *RedirectObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Modified != nil {
		in, out := &in.Modified, &out.Modified
		*out = new(string)
		**out = **in
	}
	if in.RedirectID != nil {
		in, out := &in.RedirectID, &out.RedirectID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectObservation.
func (in *RedirectObservation) DeepCopy() *RedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectParameters) DeepCopyInto(out *RedirectParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MatchingType != nil {
		in, out := &in.MatchingType, &out.MatchingType
		*out = new(string)
		**out = **in
	}
	if in.Sort != nil {
		in, out := &in.Sort, &out.Sort
		*out = new(int64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SubdomainName != nil {
		in, out := &in.SubdomainName, &out.SubdomainName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectParameters.
func (in *RedirectParameters) DeepCopy() *RedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectSpec) DeepCopyInto(out *RedirectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectSpec.
func (in *RedirectSpec) DeepCopy() *RedirectSpec {
	if in == nil {
		return nil
	}
	out := new(RedirectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectStatus) DeepCopyInto(out *RedirectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectStatus.
func (in *RedirectStatus) DeepCopy() *RedirectStatus {
	if in == nil {
		return nil
	}
	out := new(RedirectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Settings) DeepCopyInto(out *Settings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Settings.
func (in *Settings) DeepCopy() *Settings {
	if in == nil {
		return nil
	}
	out := new(Settings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Settings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsList) DeepCopyInto(out *SettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Settings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsList.
func (in *SettingsList) DeepCopy() *SettingsList {
	if in == nil {
		return nil
	}
	out := new(SettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.AccessLog != nil {
		in, out := &in.AccessLog, &out.AccessLog
		*out = new(bool)
		**out = **in
	}
	if in.AntibotPostFlood != nil {
		in, out := &in.AntibotPostFlood, &out.AntibotPostFlood
		*out = new(bool)
		**out = **in
	}
	if in.AntibotPostFloodThreshold != nil {
		in, out := &in.AntibotPostFloodThreshold, &out.AntibotPostFloodThreshold
		*out = new(int64)
		**out = **in
	}
	if in.AntibotProofOfWork != nil {
		in, out := &in.AntibotProofOfWork, &out.AntibotProofOfWork
		*out = new(bool)
		**out = **in
	}
	if in.AntibotProofOfWorkThreshold != nil {
		in, out := &in.AntibotProofOfWorkThreshold, &out.AntibotProofOfWorkThreshold
		*out = new(int64)
		**out = **in
	}
	if in.BalancingMethod != nil {
		in, out := &in.BalancingMethod, &out.BalancingMethod
		*out = new(string)
		**out = **in
	}
	if in.BlockNotWhitelisted != nil {
		in, out := &in.BlockNotWhitelisted, &out.BlockNotWhitelisted
		*out = new(bool)
		**out = **in
	}
	if in.BlockTorNetwork != nil {
		in, out := &in.BlockTorNetwork, &out.BlockTorNetwork
		*out = new(bool)
		**out = **in
	}
	if in.CacheEnabled != nil {
		in, out := &in.CacheEnabled, &out.CacheEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheRevalidate != nil {
		in, out := &in.CacheRevalidate, &out.CacheRevalidate
		*out = new(bool)
		**out = **in
	}
	if in.Cdn != nil {
		in, out := &in.Cdn, &out.Cdn
		*out = new(bool)
		**out = **in
	}
	if in.ClientMaxBodySize != nil {
		in, out := &in.ClientMaxBodySize, &out.ClientMaxBodySize
		*out = new(int64)
		**out = **in
	}
	if in.DiffieHellmanExchange != nil {
		in, out := &in.DiffieHellmanExchange, &out.DiffieHellmanExchange
		*out = new(int64)
		**out = **in
	}
	if in.EnableOriginSni != nil {
		in, out := &in.EnableOriginSni, &out.EnableOriginSni
		*out = new(bool)
		**out = **in
	}
	if in.ForwardedForReplacement != nil {
		in, out := &in.ForwardedForReplacement, &out.ForwardedForReplacement
		*out = new(string)
		**out = **in
	}
	if in.HTTPOriginPort != nil {
		in, out := &in.HTTPOriginPort, &out.HTTPOriginPort
		*out = new(int64)
		**out = **in
	}
	if in.Hsts != nil {
		in, out := &in.Hsts, &out.Hsts
		*out = new(bool)
		**out = **in
	}
	if in.HstsIncludeSubdomains != nil {
		in, out := &in.HstsIncludeSubdomains, &out.HstsIncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.HstsMaxAge != nil {
		in, out := &in.HstsMaxAge, &out.HstsMaxAge
		*out = new(int64)
		**out = **in
	}
	if in.HstsPreload != nil {
		in, out := &in.HstsPreload, &out.HstsPreload
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Active != nil {
		in, out := &in.IPv6Active, &out.IPv6Active
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreNocache != nil {
		in, out := &in.IgnoreNocache, &out.IgnoreNocache
		*out = new(bool)
		**out = **in
	}
	if in.ImageOptimization != nil {
		in, out := &in.ImageOptimization, &out.ImageOptimization
		*out = new(bool)
		**out = **in
	}
	if in.LimitAllowedHTTPMethod != nil {
		in, out := &in.LimitAllowedHTTPMethod, &out.LimitAllowedHTTPMethod
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LimitTLSVersion != nil {
		in, out := &in.LimitTLSVersion, &out.LimitTLSVersion
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.MonitoringAlertThreshold != nil {
		in, out := &in.MonitoringAlertThreshold, &out.MonitoringAlertThreshold
		*out = new(int64)
		**out = **in
	}
	if in.MonitoringContactEmail != nil {
		in, out := &in.MonitoringContactEmail, &out.MonitoringContactEmail
		*out = new(string)
		**out = **in
	}
	if in.MonitoringSendAlert != nil {
		in, out := &in.MonitoringSendAlert, &out.MonitoringSendAlert
		*out = new(bool)
		**out = **in
	}
	if in.MyraSSLHeader != nil {
		in, out := &in.MyraSSLHeader, &out.MyraSSLHeader
		*out = new(bool)
		**out = **in
	}
	if in.NextUpstream != nil {
		in, out := &in.NextUpstream, &out.NextUpstream
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnlyHTTPS != nil {
		in, out := &in.OnlyHTTPS, &out.OnlyHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.OriginConnectionHeader != nil {
		in, out := &in.OriginConnectionHeader, &out.OriginConnectionHeader
		*out = new(string)
		**out = **in
	}
	if in.ProxyCacheBypass != nil {
		in, out := &in.ProxyCacheBypass, &out.ProxyCacheBypass
		*out = new(string)
		**out = **in
	}
	if in.ProxyCacheStale != nil {
		in, out := &in.ProxyCacheStale, &out.ProxyCacheStale
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProxyConnectTimeout != nil {
		in, out := &in.ProxyConnectTimeout, &out.ProxyConnectTimeout
		*out = new(int64)
		**out = **in
	}
	if in.ProxyReadTimeout != nil {
		in, out := &in.ProxyReadTimeout, &out.ProxyReadTimeout
		*out = new(int64)
		**out = **in
	}
	if in.RequestLimitBlock != nil {
		in, out := &in.RequestLimitBlock, &out.RequestLimitBlock
		*out = new(string)
		**out = **in
	}
	if in.RequestLimitLevel != nil {
		in, out := &in.RequestLimitLevel, &out.RequestLimitLevel
		*out = new(int64)
		**out = **in
	}
	if in.RequestLimitReport != nil {
		in, out := &in.RequestLimitReport, &out.RequestLimitReport
		*out = new(bool)
		**out = **in
	}
	if in.RequestLimitReportEmail != nil {
		in, out := &in.RequestLimitReportEmail, &out.RequestLimitReportEmail
		*out = new(string)
		**out = **in
	}
	if in.Rewrite != nil {
		in, out := &in.Rewrite, &out.Rewrite
		*out = new(bool)
		**out = **in
	}
	if in.SSLOriginPort != nil {
		in, out := &in.SSLOriginPort, &out.SSLOriginPort
		*out = new(int64)
		**out = **in
	}
	if in.SourceProtocol != nil {
		in, out := &in.SourceProtocol, &out.SourceProtocol
		*out = new(string)
		**out = **in
	}
	if in.Spdy != nil {
		in, out := &in.Spdy, &out.Spdy
		*out = new(bool)
		**out = **in
	}
	if in.SubdomainName != nil {
		in, out := &in.SubdomainName, &out.SubdomainName
		*out = new(string)
		**out = **in
	}
	if in.WafEnable != nil {
		in, out := &in.WafEnable, &out.WafEnable
		*out = new(bool)
		**out = **in
	}
	if in.WafLevelsEnable != nil {
		in, out := &in.WafLevelsEnable, &out.WafLevelsEnable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WafPolicy != nil {
		in, out := &in.WafPolicy, &out.WafPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSpec) DeepCopyInto(out *SettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSpec.
func (in *SettingsSpec) DeepCopy() *SettingsSpec {
	if in == nil {
		return nil
	}
	out := new(SettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsStatus) DeepCopyInto(out *SettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsStatus.
func (in *SettingsStatus) DeepCopy() *SettingsStatus {
	if in == nil {
		return nil
	}
	out := new(SettingsStatus)
	in.DeepCopyInto(out)
	return out
}
