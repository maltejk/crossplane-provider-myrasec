apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: records.dns.myrasec.jet.crossplane.io
spec:
  group: dns.myrasec.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - myrasecjet
    kind: Record
    listKind: RecordList
    plural: records
    singular: record
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Record is the Schema for the Records API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecordSpec defines the desired state of Record
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  active:
                    description: Define wether this subdomain should be protected
                      by Myra or not.
                    type: boolean
                  alternativeCname:
                    description: The alternative CNAME that points to the record.
                    type: string
                  comment:
                    description: A comment to describe this DNS record.
                    type: string
                  domainName:
                    description: The Domain for the DNS record.
                    type: string
                  enabled:
                    description: Define wether this DNS record is enabled or not.
                    type: boolean
                  name:
                    description: Subdomain name of a DNS record.
                    type: string
                  port:
                    description: Port for SRV records.
                    format: int64
                    type: integer
                  priority:
                    description: Priority of MX records.
                    format: int64
                    type: integer
                  recordType:
                    description: 'A record type to identify the type of a record.
                      Valid types are: A, AAAA, MX, CNAME, TXT, NS, SRV and CAA.'
                    type: string
                  ttl:
                    description: Time to live.
                    format: int64
                    type: integer
                  upstreamOptions:
                    items:
                      properties:
                        backup:
                          description: Marks the server as a backup server. It will
                            be used when the primary servers are unavailable. Cannot
                            be used in combination with "Preserve client IP on the
                            same upstream".
                          type: boolean
                        down:
                          description: Marks the server as unavailable.
                          type: boolean
                        failTimeout:
                          description: 'Double usage: 1. Time period in which the
                            max_fails must occur until the upstream is deactivated.
                            2. Time period the upstream is deactivated until it is
                            reactivated. The time during which the specified number
                            of unsuccessful attempts "Max fails" to communicate with
                            the server should happen to consider the server unavailable.
                            Also the period of time the server will be considered
                            unavailable. Default is 10 seconds.'
                          format: int64
                          type: integer
                        maxFails:
                          description: The number of unsuccessful attempts to communicate
                            with the server that should happen in the duration set
                            by "Fail timeout" to consider the server unavailable.
                            Also the server is considered unavailable for the duration
                            set by "Fail timeout". By default, the number of unsuccessful
                            attempts is set to 1. Setting the value to zero disables
                            the accounting of attempts. What is considered an unsuccessful
                            attempt is defined by the "Next upstream error handling".
                          format: int64
                          type: integer
                        weight:
                          description: Weight defines the count of requests a upstream
                            handles before the next upstream is selected.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  value:
                    description: Depends on the record type. Typically an IPv4/6 address
                      or a domain entry.
                    type: string
                required:
                - domainName
                - name
                - recordType
                - ttl
                - value
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RecordStatus defines the observed state of Record.
            properties:
              atProvider:
                properties:
                  created:
                    type: string
                  id:
                    type: string
                  modified:
                    type: string
                  recordId:
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
